version: '3.7'
services:
    # Update this to the name of the service you want to work with in your docker-compose.yml file
    discord-2000:
        container_name: 'discord-2000'

        # If you want add a non-root user to your Dockerfile, you can use the "remoteUser"
        # property in devcontainer.json to cause VS Code its sub-processes (terminals, tasks,
        # debugging) to execute as the user. Uncomment the next line if you want the entire
        # container to run as this user instead. Note that, on Linux, you may need to
        # ensure the UID and GID of the container user you create matches your local user.
        # See https://aka.ms/vscode-remote/containers/non-root for details.
        user: node

        env_file:
            - '../.env'
        
        build:
            context: ..
            dockerfile: .devcontainer/Dockerfile

        volumes:
            # Update this to wherever you want VS Code to mount the folder of your project
            - ../:/workspace:cached,Z

        # network_mode: host
        networks:
            - discord-2000-private-net

        # Overrides default command so things don't shut down after the process ends.
        command: /bin/sh -c "while sleep 1000; do :; done"

    discord-2000-postgres:
        container_name: 'discord-2000-postgres'
        image: postgres:13.1
        restart: unless-stopped
        env_file:
            - '../.env'
        volumes:
            - ${PWD}/postgres/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
            - discord-2000-postgres-volume:/var/lib/postgresql/data
        ports:
            - 5432:5432
        networks:
            - discord-2000-private-net

volumes:
    discord-2000-postgres-volume:

networks:
    discord-2000-private-net:
        external: false
