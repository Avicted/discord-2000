version: '3.7'
services:
  # Update this to the name of the service you want to work with in your docker-compose.yml file
  discord-2000:
    container_name: "discord-2000"

    # If you want add a non-root user to your Dockerfile, you can use the "remoteUser"
    # property in devcontainer.json to cause VS Code its sub-processes (terminals, tasks, 
    # debugging) to execute as the user. Uncomment the next line if you want the entire 
    # container to run as this user instead. Note that, on Linux, you may need to 
    # ensure the UID and GID of the container user you create matches your local user. 
    # See https://aka.ms/vscode-remote/containers/non-root for details.
    user: node

    build:
      context: .
      dockerfile: Dockerfile
      args:
        - token=${token}
        - cmdPrefix=${cmdPrefix}
        - presence_text_channel_updates=${presence_text_channel_updates}
        - enable_presence_updates=${enable_presence_updates}
        - timezone=${timezone}
        - NODE_ENV=development

    network_mode: host

    environment:
      - token=${token}
      - cmdPrefix=${cmdPrefix}
      - presence_text_channel_updates=${presence_text_channel_updates}
      - enable_presence_updates=${enable_presence_updates}
      - timezone=${timezone}
      - NODE_ENV=development
    
    volumes:
      # Update this to wherever you want VS Code to mount the folder of your project
      - ../:/workspace:cached,Z

    # Overrides default command so things don't shut down after the process ends.
    command: /bin/sh -c "while sleep 1000; do :; done"